{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/events.js","components/Tickets/Ticket.js","api/tickets.js","components/Tickets/Tickets.js","components/Events/event.js","components/Events/CheckoutForm.jsx","components/Events/CompletedTickets.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","unauthenticatedOptions","alwaysOptions","exact","Header","Navbar","bg","expand","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","res","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","withRouter","SignIn","onSignIn","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","showEvent","initiateEvent","updateEvent","contents","card","border","borderRadius","cardImg","margin","padding","width","height","cardTitle","cardCol","marginTop","cardBody","backgroundColor","button","useState","ticket","setTicket","setEvent","useEffect","match","params","console","image","description","price","Row","Col","xs","md","Card","Img","src","Body","Title","Text","onClick","oldEvent","matched","eventObj","_id","quantity","length","forEach","item","tickets","setTickets","ticketList","map","lg","xl","display","handleRemoveOne","targetId","filter","err","handleAddOne","handleRemoveAll","formatter","Intl","NumberFormat","currency","minimumFractionDigits","total","cartContent","format","num","CheckoutForm","succeeded","setSucceeded","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","useStripe","elements","useElements","refreshCart","fetch","body","JSON","stringify","items","json","cardStyle","base","fontFamily","fontSmoothing","fontSize","invalid","iconColor","background","fontWeight","cursor","transition","boxShadow","a","empty","handleSubmit","ev","confirmCardPayment","payment_method","getElement","CardElement","payload","options","role","text","href","completedEvents","setCompletedEvents","indexEvents","events","completed","displayTickets","updatedAt","promise","loadStripe","appContainer","App","clearEvent","owner","coupon","completeEvent","onSignInSuccess","msgAlerts","msg","uuid","Container","fluid","path","Ticket","setOrder","clearTicket","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.09524032.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n    <NavLink to='/cart' className='nav-link'>Cart</NavLink>\n    <NavLink to='/events/order-history' className='nav-link'>Recent Orders</NavLink>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink exact to='/' className='nav-link'>Home</NavLink>\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='primary' variant='dark' expand='md'>\n    <Navbar.Brand>\n      <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>PickItTicket</Link>\n    </Navbar.Brand>\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n    <Navbar.Collapse id='basic-navbar-nav'>\n      <Nav className='ml-auto'>\n        {user && (\n          <span className='navbar-text mr-2'>Welcome, {user.email}</span>\n        )}\n        {alwaysOptions}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://intense-basin-51180.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password, passwordConfirmation } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignUp)\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\nexport const addedToCartSuccess = 'Successfully added a ticket to your cart!'\nexport const addedToCartFailure = 'You must be logged in to buy tickets. Please sign in.'\nexport const checkoutSuccess = 'Thank you for shopping with PickItTicket!'\nexport const checkoutFailure = 'Oops. Something went wrong.'\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignIn = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signIn(this.state)\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '' })\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={this.onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, user } = this.props\n\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n// will only ever get users orders\nexport const indexEvents = (user) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/events',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const showEvent = (id, user) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + `/events/${id}`,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n// checks to see if user has an open order before making one and will return that order(with contents) if found, (else it will return the new open order)\nexport const initiateEvent = (user) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/events/open',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n// Does not check to see if use has an existing open order before making one, leading to the potential for multiple open orders in the database\nexport const createEvent = (user) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/events',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      event: {\n        contents: [],\n        owner: user,\n        coupon: '',\n        completed: false\n      }\n    }\n  })\n}\n\nexport const updateEvent = (id, data, user) => {\n  return axios({\n    method: 'PATCH',\n    url: apiUrl + `/events/${id}`,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      event: {\n        contents: data\n      }\n    }\n  })\n}\n\nexport const completeEvent = (id, user) => {\n  return axios({\n    method: 'PATCH',\n    url: apiUrl + `/events/${id}`,\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      event: {\n        completed: true\n      }\n    }\n  })\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Button, Card, Row, Col } from 'react-bootstrap'\nimport { showTicket } from '../../api/tickets'\nimport { updateEvent, showEvent } from '../../api/events'\nimport {\n  addedToCartFailure,\n  addedToCartSuccess\n} from '../AutoDismissAlert/messages'\n\nconst card = {\n  border: 'none',\n  borderRadius: '10px'\n}\n\nconst cardImg = {\n  margin: 'auto',\n  padding: '25px',\n  width: 'auto',\n  height: '200px'\n}\n\nconst cardTitle = {\n  height: '50px'\n}\n\nconst cardCol = {\n  margin: 'auto',\n  marginTop: '10px'\n}\n\nconst cardBody = {\n  backgroundColor: 'grey',\n  borderRadius: '0px 0px 8px 8px',\n  color: 'white'\n}\n\nconst button = {\n  width: 'inherit'\n}\n\nconst Tickets = (props) => {\n  const [ticket, setTicket] = useState(null)\n  const { event, user, setEvent, msgAlert } = props\n\n  useEffect(() => {\n    showTicket(props.match.params.id)\n      .then((res) => setTicket(res.data.ticket))\n      .catch(console.error)\n  }, [])\n\n  const handleAddToCart = () => {\n    const oldEvent = event.contents\n    let matched = false\n    const eventObj = {\n      id: ticket._id,\n      quantity: 1,\n      ticket: ticket\n    }\n    if (oldEvent.length === 0) {\n      oldEvent.push(eventObj)\n    } else {\n      // iterate each item, if id's match, increment quantity\n      oldEvent.forEach((item) => {\n        if (item.id === ticket._id) {\n          // this will track if we've matched for below boolean\n          matched = true\n          item.quantity++\n        }\n      })\n      // after the forEach if there's no match go ahead and push the object,\n      // we need this tracker boolean, because we don't want to have the case of pushing\n      // multiple time inside the forEach loop.  This gives us a way to remember that there\n      // was no match.  It will false-out if it was turned true.\n      if (matched === false) {\n        oldEvent.push(eventObj)\n      }\n    }\n\n    const id = event._id\n    updateEvent(id, oldEvent, user)\n      .then(() => {\n        return showEvent(id, user)\n      })\n      .then((res) => setEvent(res.data.event))\n      .then(() =>\n        msgAlert({\n          heading: 'Added to Cart...',\n          message: addedToCartSuccess,\n          variant: 'success'\n        })\n      )\n      .catch(() => {\n        msgAlert({\n          heading: 'Could not add to Cart.',\n          message: addedToCartFailure,\n          variant: 'danger'\n        })\n      })\n  }\n\n  if (!ticket) {\n    return <p>Loading...</p>\n  }\n\n  const { name, image, description, price } = ticket\n  return (\n    <Row>\n      <Col xs={10} md={8} style={cardCol}>\n        <Card style={card} className='m-auto'>\n          <Card.Img variant='top' src={`${image}`} style={cardImg} />\n          <Card.Body style={cardBody}>\n            <Card.Title style={cardTitle}>{name}</Card.Title>\n            <Card.Text>{description}</Card.Text>\n            <Card.Text>${price}</Card.Text>\n            <Button style={button} onClick={handleAddToCart} variant='primary'>Add to Cart{' '}\n            </Button>{' '}\n          </Card.Body>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default withRouter(Tickets)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const index = () => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + '/tickets'\n  })\n}\n\nexport const showTicket = (id) => {\n  return axios({\n    method: 'GET',\n    url: apiUrl + `/tickets/${id}`\n  })\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { Card, Col, Row } from 'react-bootstrap'\n\nimport { index } from '../../api/tickets'\n\nconst cardImg = {\n  margin: 'auto',\n  padding: '25px',\n  width: 'auto',\n  height: '200px'\n}\n\nconst cardCol = {\n  margin: 'auto',\n  marginTop: '10px'\n}\n\nconst cardTitle = {\n  height: '50px'\n}\n\nconst cardBody = {\n  backgroundColor: 'grey',\n  borderRadius: '0px 0px 8px 8px',\n  color: 'white'\n}\n\nconst card = {\n  border: 'none',\n  borderRadius: '10px'\n}\n\nconst Tickets = (props) => {\n  const [tickets, setTickets] = useState([])\n\n  useEffect(() => {\n    index()\n      .then((res) => setTickets(res.data.tickets))\n      .catch(console.error)\n  }, [])\n\n  const ticketList = tickets.map((item) => (\n    <Col xs={12} md={6} lg={4} xl={4} key={item._id} style={cardCol}>\n      <Card style={card} className='m-auto'>\n        <Link style={{ margin: 'auto' }} to={`/tickets/${item._id}`}>\n          <Card.Img variant='top' src={`${item.image}`} style={cardImg} />\n        </Link>\n        <Card.Body style={cardBody}>\n          <Card.Title style={cardTitle}>{item.name}</Card.Title>\n          <Card.Text>Price: ${item.price}</Card.Text>\n        </Card.Body>\n      </Card>\n    </Col>\n  ))\n\n  return (\n    <Row>\n      <h3 className='text-light'>Tickets</h3>\n      <Col xs={12} style={{ marginTop: '10px' }}>\n        <Row>{ticketList}</Row>\n      </Col>\n\n      <div className='col-12 mt-5'></div>\n    </Row>\n  )\n}\n\nexport default withRouter(Tickets)\n","import React from 'react'\nimport { withRouter, Link } from 'react-router-dom'\nimport { Button, Card } from 'react-bootstrap'\nimport { updateEvent, showEvent } from '../../api/events'\n\nconst button = {\n  width: 'inherit'\n}\n\nconst card = {\n  display: 'inline-block',\n  margin: 'auto',\n  width: '75%',\n  padding: '25px'\n}\n\nconst Cart = (props) => {\n  const { event, user, setEvent } = props\n\n  const handleRemoveOne = (event) => {\n    // event.preventDefault()\n    const targetId = event.target.value\n    // grad the order contents from state bind to oldOrder\n    let oldEvent = event.contents\n    // iterate over all order items, when we match our targetId (argument from function call),\n    // decrement by one, only if the quantity is 1 or more.  If not, do nothing, deal with\n    // this case in the next statement.\n    oldEvent.forEach((item) => {\n      if (item.id === targetId && item.quantity > 0) {\n        item.quantity--\n      }\n    })\n    // this uses a negative condition for the boolean to delete a zero amount\n    oldEvent = oldEvent.filter((item) => item.quantity !== 0)\n    // now updates the order array at the API level.\n    const id = event._id\n    updateEvent(id, oldEvent, user)\n      .then(() => {\n        return showEvent(id, user)\n      })\n      .then((res) => setEvent(res.data.event))\n      .catch((err) => console.error(err))\n  }\n\n  const handleAddOne = (event) => {\n    // getting id from the value stored on the card in the DOM\n    const targetId = event.target.value\n    // variable to hold our state order object\n    const oldEvent = event.contents\n    // iterate through all our order and increment where the id's match\n    oldEvent.forEach((item) => {\n      if (item.id === targetId) {\n        item.quantity++\n      }\n    })\n    // API call to update the order\n    const id = event._id\n    updateEvent(id, oldEvent, user)\n      .then(() => {\n        return showEvent(id, user)\n      })\n      .then((res) => setEvent(res.data.event))\n      .catch((err) => console.error(err))\n  }\n\n  const handleRemoveAll = (event) => {\n    // pull ID from DOM element we clicked\n    const targetId = event.target.value\n    // hold our state object in a local variable\n    const oldEvent = event.contents\n    // iterate through and find the matching ID and set quantity to 0\n    oldEvent.forEach((item) => {\n      if (item.id === targetId) {\n        item.quantity = 0\n      }\n    })\n    // call handle removeOne to delete out of the cart.\n    handleRemoveOne(event)\n  }\n\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2\n  })\n\n  let total = 0\n  const sumTotal = (num) => {\n    total += num\n  }\n\n  const cartContent = event.contents.map((item) => (\n    <div key={item.event._id} className='col-3 mt-5'>\n      <Card style={{ width: '25rem' }} className='m-auto'>\n        <Card.Img variant='top' src={`${item.event.image}`} style={card} />\n        <Card.Body>\n          <Card.Title>{item.event.name}</Card.Title>\n          <Card.Text>Price: ${item.event.price}</Card.Text>\n          <Card.Text>Quantity: {item.quantity}</Card.Text>\n          <Card.Text>\n            Subtotal: {formatter.format(item.quantity * item.event.price)}\n          </Card.Text>\n          {sumTotal(item.quantity * item.event.price)}\n          <Button\n            style={button}\n            value={item.event._id}\n            onClick={handleRemoveOne}\n            variant='secondary'>\n            -\n          </Button>{' '}\n          <Button\n            style={button}\n            value={item.event._id}\n            onClick={handleAddOne}\n            variant='secondary'>\n            +\n          </Button>{' '}\n          <Button\n            style={button}\n            value={item.event._id}\n            onClick={handleRemoveAll}\n            variant='secondary'>\n            Remove All\n          </Button>{' '}\n        </Card.Body>\n      </Card>\n    </div>\n  ))\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3 style={{ color: 'black' }}>\n        Order Total: {formatter.format(total)}\n        </h3>\n        <Link to='/cart/checkout'>\n          <Button\n            style={{ width: '100px', textDecoration: 'none' }}\n            variant='warning'>\n            Checkout\n          </Button>\n        </Link>\n        <row>{cartContent}</row>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(Cart)\n","import React, { useState, useEffect } from 'react'\nimport apiUrl from '../../apiConfig'\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js'\n\nexport default function CheckoutForm (props) {\n  const [succeeded, setSucceeded] = useState(false)\n  const [error, setError] = useState(null)\n  const [processing, setProcessing] = useState('')\n  const [disabled, setDisabled] = useState(true)\n  const [clientSecret, setClientSecret] = useState('')\n  const stripe = useStripe()\n  const elements = useElements()\n\n  const { refreshCart, user, event } = props\n\n  useEffect(() => {\n    // Create PaymentIntent as soon as the page loads\n    window\n      .fetch(apiUrl + '/create-payment-intent', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ items: [{ id: 'tickets-sales' }] })\n      })\n      .then(res => {\n        return res.json()\n      })\n      .then(data => {\n        setClientSecret(data.clientSecret)\n      })\n  }, [])\n\n  const cardStyle = {\n    style: {\n      base: {\n        color: '#32325d',\n        fontFamily: 'Arial, sans-serif',\n        fontSmoothing: 'antialiased',\n        fontSize: '16px',\n        '::placeholder': {\n          color: '#32325d'\n        }\n      },\n      invalid: {\n        color: '#fa755a',\n        iconColor: '#fa755a'\n      },\n      button: {\n        background: '#5469d4',\n        fontFamily: 'Arial, sans-serif',\n        color: '#ffffff',\n        borderRadius: '0 0 4px 4px',\n        border: '0',\n        padding: '12px 16px',\n        fontSize: '16px',\n        fontWeight: '600',\n        cursor: 'pointer',\n        display: 'block',\n        transition: 'all 0.2s ease',\n        boxShadow: '0px 4px 5.5px 0px rgba(0, 0, 0, 0.07)',\n        width: '100%'\n      }\n    }\n  }\n\n  const handleChange = async (event) => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty)\n    setError(event.error ? event.error.message : '')\n  }\n\n  const handleSubmit = async ev => {\n    ev.preventDefault()\n    setProcessing(true)\n\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    })\n\n    if (payload.error) {\n      setError(`Payment failed ${payload.error.message}`)\n      setProcessing(false)\n    } else {\n      setError(null)\n      setProcessing(false)\n      setSucceeded(true)\n      refreshCart(event, user)\n    }\n  }\n\n  return (\n    <div id='checkout'>\n      <form id=\"payment-form\" onSubmit={handleSubmit}>\n        <CardElement id=\"card-element\" options={cardStyle} onChange={handleChange} />\n        <button\n          disabled={processing || disabled || succeeded}\n          id=\"submit\"\n          options={cardStyle}\n        >\n          <span id=\"button-text\">\n            {processing\n              ? (\n                <div className=\"spinner\" id=\"spinner\"></div>\n              )\n              : (\n                'Pay now'\n              )}\n          </span>\n        </button>\n        {/* Show any error that happens when processing the payment */}\n        {error && (\n          <div className=\"card-error\" role=\"alert\">\n            {error}\n          </div>\n        )}\n        {/* Show a success message upon completion */}\n        <p className={succeeded ? 'result-message' : 'result-message hidden'}>\n          Purchase successful\n          <a text='Thank you for your purchase'\n            href={'https://dashboard.stripe.com/test/payments'}\n          >\n            {' '}\n          </a>\n        </p>\n      </form>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { indexEvents } from '../../api/events'\n\nconst CompletedEvents = (props) => {\n  const [completedEvents, setCompletedEvents] = useState([])\n  const { user } = props\n\n  useEffect(() => {\n    indexEvents(user)\n      .then((res) => {\n        const events = res.data.events.filter((event) => event.completed)\n        return events\n      })\n      .then((events) => setCompletedEvents(events))\n      .catch((err) => console.error(err))\n  }, [])\n\n  const displayTickets = completedEvents.map((event) => (\n    <>\n      <br></br>\n      <li key={event._id}>\n        <span>Purchase Date: {event.updatedAt}</span>\n        <br></br>\n        <span>Order #: {event._id}</span>\n      </li>\n    </>\n  ))\n\n  const list = {\n    color: 'black'\n  }\n  return (\n    <div className='row'>\n      <div style={list} className='col-sm-8 m-auto mt-5'>\n        <h4>Recent Purchases</h4>\n        <ul>{displayTickets}</ul>\n      </div>\n    </div>\n  )\n}\n\nexport default withRouter(CompletedEvents)\n","/* eslint-disable no-tabs */\nimport React, { Component, Fragment } from 'react'\nimport { Route } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport Ticket from './components/Tickets/Ticket'\nimport Tickets from './components/Tickets/Tickets'\nimport Cart from './components/Events/event'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { initiateEvent, completeEvent } from './api/events'\nimport CheckoutForm from './components/Events/CheckoutForm'\nimport CompletedEvents from './components/Events/CompletedTickets'\nimport { checkoutSuccess, checkoutFailure } from './components/AutoDismissAlert/messages'\nimport { Elements } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\n\nconst promise = loadStripe(\n  'pk_test_51JanJmHKOMeXXROM2h6EjycWXPgjGQ8T9GG4133lMs8VsiCrtK2dHHsUZGnm0R3vOS6Ue91lDJYhbggljlEf04Hf009GBHcqv4'\n)\n\nconst appContainer = {\n  padding: '0px'\n}\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: null,\n      msgAlerts: [],\n      event: {\n        contents: [],\n        owner: this.user,\n        coupon: '',\n        completed: false\n      }\n    }\n  }\n\n\tsetEvent = (event) => this.setState({ event })\n\n\tsetUser = (user) => this.setState({ user })\n\nclearEvent = () =>\n  this.setState({\n    event: {\n      contents: [],\n      owner: this.user,\n      coupon: '',\n      completed: false\n    }\n  })\n\nrefreshCart = (event, user) => {\n  const id = event._id\n  completeEvent(id, user)\n    .then(() => initiateEvent(user))\n    .then((res) => {\n      this.setEvent(res.data.event)\n    })\n    .then((res) => {\n      this.msgAlert({\n        heading: 'Checkout successful.',\n        message: checkoutSuccess,\n        variant: 'success'\n      })\n    })\n    .catch((err) => {\n      this.msgAlert({\n        heading: 'Checkout failure.' + err,\n        message: checkoutFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nclearUser = () => this.setState({ user: '' })\n\nonSignInSuccess = (user) => {\n  initiateEvent(user).then((res) => {\n    this.setEvent(res.data.event)\n  })\n}\n\ndeleteAlert = (id) => {\n  this.setState((state) => {\n    return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\n  })\n}\n\nmsgAlert = ({ heading, message, variant }) => {\n  const id = uuid()\n  this.setState((state) => {\n    return {\n      msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n    }\n  })\n}\n\nrender () {\n  const { msgAlerts, user, event } = this.state\n\n  return (\n    <Fragment>\n      <Container fluid style={appContainer}>\n        <Row className='justify-content-center'>\n          <Col xs={12} className='m-auto'>\n            <Header user={user} />\n            {msgAlerts.map((msgAlert) => (\n              <AutoDismissAlert\n                key={msgAlert.id}\n                heading={msgAlert.heading}\n                variant={msgAlert.variant}\n                message={msgAlert.message}\n                id={msgAlert.id}\n                deleteAlert={this.deleteAlert}\n              />\n            ))}\n          </Col>\n        </Row>\n        <main className='container'>\n          <Route\n            path='/sign-up'\n            render={() => (\n              <SignUp\n                msgAlert={this.msgAlert}\n                setUser={this.setUser}\n                onSignInSuccess={this.onSignInSuccess}\n              />\n            )}\n          />\n          <Route\n            path='/sign-in'\n            render={() => (\n              <SignIn\n                msgAlert={this.msgAlert}\n                setUser={this.setUser}\n                setTicket={this.setTicket}\n                onSignInSuccess={this.onSignInSuccess}\n                event={event}\n              />\n            )}\n          />\n          <Route\n            exact\n            path='/tickets'\n            render={() => <Tickets msgAlert={this.msgAlert} />}\n          />\n          <Route\n            path='/tickets/:id'\n            render={() => (\n              <Ticket\n                msgAlert={this.msgAlert}\n                setOrder={this.setTicket}\n                event={event}\n                user={user}\n              />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/sign-out'\n            render={() => (\n              <SignOut\n                msgAlert={this.msgAlert}\n                clearUser={this.clearUser}\n                clearTicket={this.clearTicket}\n                user={user}\n              />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/change-password'\n            render={() => (\n              <ChangePassword msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            exact\n            path='/cart'\n            render={() => (\n              <Cart\n                msgAlert={this.msgAlert}\n                user={user}\n                event={event}\n                setEvent={this.setEvent}\n              />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/cart/checkout'\n            render={() => (\n              <div className='App'>\n                <Elements stripe={promise}>\n                  <CheckoutForm\n                    refreshCart={this.refreshCart}\n                    user={user}\n                    event={event}\n                  />\n                </Elements>\n              </div>\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/events/order-history'\n            render={() => (\n              <CompletedEvents msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n        </main>\n      </Container>\n    </Fragment>\n  )\n}\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}