{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","api/tickets.js","components/Ticket/CreateTicket.js","components/Ticket/IndexTickets.js","components/Ticket/ShowTicket.js","components/Ticket/UpdateTicket.js","components/Home/Home.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","unauthenticatedOptions","alwaysOptions","exact","Header","Navbar","bg","expand","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","history","setUser","password_confirmation","passwordConfirmation","then","res","push","catch","error","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","withRouter","SignIn","onSignIn","SignOut","clearUser","headers","Authorization","token","signOut","finally","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","showTicket","CreateTicket","updatedField","currentState","ticket","handleSubmit","createTicket","err","ticketName","ticketDescription","defaultValue","width","IndexTickets","componentDidMount","_id","indexTickets","console","log","loading","ticketsJsx","length","map","ShowTicket","handleDelete","match","deleteTicket","params","owner","updateButton","display","onClick","paddingTop","Card","height","margin","Body","UpdateTicket","updateTicket","ticketId","Home","marginTop","Col","fontSize","App","msgAlerts","filter","msg","uuid","path","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.11adf7e3.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Link, NavLink } from 'react-router-dom'\n\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n    {/* <NavLink to='/cart' className='nav-link'>Cart</NavLink>\n    <NavLink to='/events/order-history' className='nav-link'>Recent Orders</NavLink> */}\n    <NavLink to='/tickets' className='nav-link'>View all Tickets</NavLink>\n    <NavLink to='/create-ticket' className='nav-link'>Create Ticket</NavLink>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink exact to='/' className='nav-link'>Home</NavLink>\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <Navbar bg='dark' variant='dark' expand='md'>\n    <Navbar.Brand>\n      <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>Pick It Ticket</Link>\n    </Navbar.Brand>\n    <Navbar.Toggle aria-controls='basic-navbar-nav' />\n    <Navbar.Collapse id='basic-navbar-nav'>\n      <Nav className='ml-auto'>\n        {user && (\n          <span className='navbar-text mr-2'>Welcome, {user.email}</span>\n        )}\n        {alwaysOptions}\n        {user ? authenticatedOptions : unauthenticatedOptions}\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://intense-basin-51180.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password, passwordConfirmation } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='info' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignUp)\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\nexport const addedToCartSuccess = 'Successfully added a ticket to your cart!'\nexport const addedToCartFailure = 'You must be logged in to buy tickets. Please sign in.'\nexport const checkoutSuccess = 'Thank you for shopping with PickItTicket!'\nexport const checkoutFailure = 'Oops. Something went wrong.'\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignIn = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, setUser } = this.props\n\n  signIn(this.state)\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '' })\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign In</h3>\n        <Form onSubmit={this.onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='info' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, history, user } = this.props\n\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='info' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n// import { data } from 'autoprefixer'\n\n// create ticket\nexport const createTicket = (data, user) => {\n  return axios({\n    url: apiUrl + '/create-ticket',\n    method: 'post',\n    data: { ticket: data.ticket },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// show all tickets\nexport const indexTickets = (user, id) => {\n  return axios({\n    url: apiUrl + '/tickets?user=' + user._id,\n    method: 'get',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// show a ticket\nexport const showTicket = (id, user) => {\n  return axios({\n    url: apiUrl + '/tickets/' + id,\n    method: 'get',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// delete a ticket\nexport const deleteTicket = (id, user) => {\n  return axios({\n    url: apiUrl + '/tickets/' + id,\n    method: 'delete',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\n// update ticket\nexport const updateTicket = (data, id, user) => {\n  return axios({\n    method: 'PATCH',\n    url: apiUrl + `/tickets/${id}`,\n    data: { ticket: data },\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\n// import Dropdown from 'react-bootstrap/Dropdown'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { createTicket } from '../../api/tickets'\n\nclass CreateTicket extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      ticket: {\n        ticketName: '',\n        ticketDescription: '',\n        location: ''\n      }\n    }\n  }\n\nhandleChange = (event) => {\n  // the event.target of this event will be an input element\n  // which will have a `name` attribute (key in the state) & a 'value' (what the user typed)\n  const updatedField = { [event.target.name]: event.target.value }\n  this.setState((currentState) => {\n    return {\n      ticket: { ...currentState.ticket, ...updatedField }\n    }\n  })\n}\n\nhandleSubmit = (event) => {\n  event.preventDefault()\n  const { user, msgAlert, history } = this.props\n  createTicket(this.state, user)\n    .then((res) => history.push('/tickets')) // + res.data.ticket._id\n    .then(() =>\n      msgAlert({\n        heading: 'Ticket created Successfully',\n        message: 'nice work go check out your Ticket',\n        variant: 'success'\n      })\n    )\n    .catch((err) => {\n      msgAlert({\n        heading: 'Ticket creation failed',\n        message: 'something went wrong ' + err.message,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  return (\n    <>\n      <Form onSubmit={this.handleSubmit} className='text-center'>\n        <h3 className='text-dark'>Create New Ticket Log</h3>\n        <Form.Group controlId='ticketName'>\n          <Form.Label className='text-dark'>Ticket Name</Form.Label>\n          <Form.Control\n            required\n            // name='name'\n            // value={list.name}\n            // placeholder='List Name'\n            onChange={this.handleChange}\n            name='ticketName'\n            defaultValue={this.state.ticket.ticketName}\n            placeholder='Ticket Name'\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label className='text-dark'>Ticket Description</Form.Label>\n          <Form.Control\n            required\n            onChange={this.handleChange}\n            name='ticketDescription'\n            defaultValue={this.state.ticket.ticketDescription}\n            placeholder='Description'\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label className='text-dark'>Location</Form.Label>\n          <Form.Control\n            required\n            onChange={this.handleChange}\n            name='location'\n            defaultValue={this.state.ticket.location}\n            placeholder='Where is the event located at?'\n          />\n        </Form.Group>\n        <Button\n          type='submit'\n          variant='info'\n          className='grad my-3'\n          style={{ width: '100%' }}>\n          Submit\n        </Button>\n      </Form>\n    </>\n  )\n}\n}\n\nexport default withRouter(CreateTicket)\n","import { React, Component } from 'react'\nimport { indexTickets } from '../../api/tickets'\nimport { Link } from 'react-router-dom'\n\nclass IndexTickets extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      ticket: null,\n      loading: false\n    }\n  }\n\ncomponentDidMount = () => {\n  const { user, msgAlert } = this.props\n  indexTickets(user, user._id)\n    .then((res) => {\n      console.log(res)\n      return res\n    })\n    .then((res) => {\n      this.setState({ ticket: res.data.ticket })\n    })\n\n    .catch((err) =>\n      msgAlert({\n        heading: 'Index failed',\n        message: 'Something went wrong' + err.message,\n        variant: 'danger'\n      })\n    )\n}\n\n// render\nrender () {\n  const { ticket } = this.state\n  if (ticket === null) {\n    return 'Loading...'\n  }\n  // const { user } = this.props\n  let ticketsJsx\n  if (ticket.length === 0) {\n    ticketsJsx = 'You do not have any tickets. Go ahead create one! :)'\n  } else {\n    ticketsJsx = ticket.map((ticket) => (\n      <li key={ticket._id}>\n        <Link to={`/tickets/${ticket._id}`}>{ticket.ticketName}</Link>\n      </li>\n    ))\n  }\n\n  return (\n    <>\n      <h3>All Tickets That Are Up For Sale</h3>\n      <br></br>\n      {ticketsJsx}\n    </>\n  )\n}\n}\n// forgot to Export\nexport default IndexTickets\n","import React, { Component } from 'react'\nimport { Card } from 'react-bootstrap'\nimport { Link, withRouter } from 'react-router-dom'\n// API request\nimport { deleteTicket, showTicket } from '../../api/tickets'\nimport Button from 'react-bootstrap/Button'\n\nclass ShowTicket extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      ticket: {\n        ticketName: '',\n        ticketDescription: '',\n        location: ''\n      }\n    }\n  }\n\n  componentDidMount () {\n    // console.log('test')\n    const { match, user, msgAlert } = this.props\n    showTicket(match.params.id, user)\n      .then((res) => this.setState({ ticket: res.data.ticket }))\n      .then(() =>\n        msgAlert({\n          heading: 'show ticket success',\n          message: 'check out the ticket',\n          variant: 'success'\n        })\n      )\n      .catch((err) =>\n        msgAlert({\n          heading: 'Show ticket failed',\n          message: 'something went wrong' + err.message,\n          variant: 'danger'\n        })\n      )\n  }\n\nhandleDelete = (event) => {\n  console.log('adam')\n  const { match, user, msgAlert, history } = this.props\n  deleteTicket(match.params.id, user)\n    // redirect to tickets\n    .then(() => history.push('/tickets'))\n    // .then(() => history.push(match.url))\n    .then(() =>\n      msgAlert({\n        heading: 'Ticket Deleted Successfully',\n        message: 'Your Ticket no longer exists',\n        variant: 'success'\n      })\n    )\n    .catch((err) =>\n      msgAlert({\n        heading: 'Failed to Delete Your Ticket',\n        message: 'Something went wrong: ' + err.message,\n        variant: 'danger'\n      })\n    )\n}\n\nrender () {\n  // if (this.state.ticket === null) {\n  //   console.log('this is in show tickets')\n  //   return 'Loading...'\n  // }\n  const {\n    ticketName,\n    ticketDescription,\n    location,\n    owner\n  } = this.state.ticket\n  const { match, user } = this.props\n  // console.log(user._id, owner)\n  const updateButton =\n        user._id === owner\n          ? (\n            <>\n              <Link to={`/tickets/${match.params.id}/update`}>\n                <Button\n                  variant='info'\n                  style={{\n                    width: '100%',\n                    display: 'grid',\n                    textDecoration: 'none'\n                  }}>\n                        -Update-\n                </Button>\n              </Link>\n              <Button\n                onClick={this.handleDelete}\n                variant='dark'\n                style={{ width: '100%', display: 'grid', paddingTop: '15px' }}>\n                    -Delete-\n              </Button>\n            </>\n          )\n          : null\n  return (\n    <>\n      <Card\n        className='card-grad m-2'\n        style={{\n          width: 'auto',\n          height: 'auto',\n          color: 'grey'\n        }}>\n        {updateButton}\n        <Card.Header className='dark-bg text dark'>\n          <div className='d-flex justify-content-end'>\n            <p className='text-center' style={{ margin: 'auto' }}>\n              {`${user.email}'s ticket:`}\n            </p>\n          </div>\n        </Card.Header>\n        <Card.Body className='dark-bg d-flex justify-content-start justify-content-md-center flex-wrap'>\n          <ul className='list-group list-group-flush'>\n            <li className='list-group-item'>Ticket Name: {ticketName}</li>\n            <br></br>\n            <li className='list-group-item'>Ticket Description: {ticketDescription}</li>\n            <br></br>\n            <li className='list-group-item'>Where is the event located at?: {location}\n            </li>\n          </ul>\n        </Card.Body>\n      </Card>\n    </>\n  )\n}\n}\n\nexport default withRouter(ShowTicket)\n","import React, { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\n// import Dropdown from 'react-bootstrap/Dropdown'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { updateTicket, showTicket } from '../../api/tickets'\n\nclass UpdateTicket extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      ticket: {\n        ticketName: '',\n        ticketDescription: '',\n        location: ''\n      }\n    }\n  }\n\n  componentDidMount () {\n    // one of the automatic router props we get is the match object - that has data about the params in our front-end route url\n    const { match, user, location } = this.props\n    showTicket(match.params.id, user, location.ticketId)\n      .then((res) => this.setState({ ticket: res.data.ticket }))\n  }\n\nhandleChange = (event) => {\n// the event.target of this event will be an input element\n// which will have a `name` attribute (key in the state) & a 'value' (what the user typed)\n  const updatedField = { [event.target.name]: event.target.value }\n  this.setState((currentState) => {\n    return {\n      ticket: { ...currentState.ticket, ...updatedField }\n    }\n  })\n}\n\nhandleSubmit = (event) => {\n  event.preventDefault()\n\n  const { user, msgAlert, history, match } = this.props\n\n  updateTicket(this.state.ticket, match.params.id, user)\n    .then((res) => history.push('/tickets')) // + res.data.ticket._id\n    .then(() =>\n      msgAlert({\n        heading: 'Ticket updated Successfully',\n        message: 'nice work go check out your Ticket',\n        variant: 'success'\n      })\n    )\n    .catch((err) => {\n      msgAlert({\n        heading: 'Ticket update failed',\n        message: 'something went wrong ' + err.message,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  return (\n    <>\n      <Form onSubmit={this.handleSubmit} className='text-center'>\n        <h3 className='text-dark'>Update Ticket Log</h3>\n        <Form.Group controlId='name'>\n          <Form.Label className='text-dark'>Ticket Name</Form.Label>\n          <Form.Control\n            required\n            // name='name'\n            // value={list.name}\n            // placeholder='List Name'\n            onChange={this.handleChange}\n            name='name'\n            defaultValue={this.state.ticket.ticketName}\n            placeholder='Ticket Name'\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label className='text-dark'>Ticket Description</Form.Label>\n          <Form.Control\n            required\n            onChange={this.handleChange}\n            name='description'\n            defaultValue={this.state.ticket.ticketDescription}\n            placeholder='Description'\n          />\n        </Form.Group>\n        <Form.Group>\n          <Form.Label className='text-dark'>Location</Form.Label>\n          <Form.Control\n            required\n            onChange={this.handleChange}\n            name='location'\n            defaultValue={this.state.ticket.location}\n            placeholder='Where is the event located at?'\n          />\n        </Form.Group>\n        <Button\n          type='submit'\n          variant='info'\n          className='grad my-3'\n          style={{ width: '100%' }}>Submit\n        </Button>\n      </Form>\n      <Button\n        onClick={() => this.handleDelete}\n        variant='dark'\n        style={{ width: '100%' }}>Delete\n      </Button>\n    </>\n  )\n}\n}\n\nexport default withRouter(UpdateTicket)\n","import React from 'react'\nimport { Col } from 'react-bootstrap'\n\nexport default function Home () {\n  return (\n    <div className='text-center'>\n      <div style={{ height: '30vh' }}>\n        <h1\n          className='animated animatedFadeInUp fadeInUp'\n          style={{\n            marginTop: '10vh',\n            color: 'primary',\n            textDecoration: 'none'\n          }}>This App Allows Users To Create A Tickets And Update Tickets That Any Events Is Coming Up.\n        </h1>\n      </div>\n      <div>\n        <Col>\n          <p style={{ color: 'black', fontSize: '27px' }}>To get started using Pick It Tickets you must first create an account to enter and keep track of yours. Once is entered, you can view that ticket, as well as any following runs you may enter. Each tickets will have the option to be updated and/or deleted.\n          </p>\n          <h2>Created By Pablo Maldonado-Hernandez</h2>\n        </Col>\n      </div>\n    </div>\n  )\n}\n","/* eslint-disable no-tabs */\nimport React, { Component, Fragment } from 'react'\nimport { Route } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\n// import Ticket from './components/Tickets/Ticket'\n// import Tickets from './components/Tickets/Tickets'\nimport CreateTicket from './components/Ticket/CreateTicket'\nimport IndexTickets from './components/Ticket/IndexTickets'\nimport ShowTicket from './components/Ticket/ShowTicket'\nimport UpdateTicket from './components/Ticket/UpdateTicket'\nimport Home from './components/Home/Home'\n// // import Cart from './components/Events/event'\n// import { Container, Row, Col } from 'react-bootstrap'\n// import { initiateEvent, completeEvent } from './api/events'\n// import CheckoutForm from './components/Events/CheckoutForm'\n// import CompletedEvents from './components/Events/CompletedTickets'\n// import { checkoutSuccess, checkoutFailure } from './components/AutoDismissAlert/messages'\n// import { Elements } from '@stripe/react-stripe-js'\n// import { loadStripe } from '@stripe/stripe-js'\n\n// // change this to secret key\n// const promise = loadStripe(\n//   'pk_test_51JanJmHKOMeXXROM2h6EjycWXPgjGQ8T9GG4133lMs8VsiCrtK2dHHsUZGnm0R3vOS6Ue91lDJYhbggljlEf04Hf009GBHcqv4'\n// )\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: null,\n      msgAlerts: []\n    }\n  }\n\nsetUser = (user) => this.setState({ user })\n\nclearUser = () => this.setState({ user: null })\n\ndeleteAlert = (id) => {\n  this.setState((state) => {\n    return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\n  })\n}\n\nmsgAlert = ({ heading, message, variant }) => {\n  const id = uuid()\n  this.setState((state) => {\n    return {\n      msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n    }\n  })\n}\n\nrender () {\n  const { msgAlerts, user } = this.state\n\n  return (\n    <Fragment>\n      <Header user={user} />\n      {msgAlerts.map((msgAlert) => (\n        <AutoDismissAlert\n          key={msgAlert.id}\n          heading={msgAlert.heading}\n          variant={msgAlert.variant}\n          message={msgAlert.message}\n          id={msgAlert.id}\n          deleteAlert={this.deleteAlert}\n        />\n      ))}\n      <main className='container'>\n        <Route\n          path='/sign-up'\n          render={() => (\n            <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\n          )}\n        />\n        <Route\n          path='/sign-in'\n          render={() => (\n            <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\n          )}\n        />\n        <Route\n          path='/'\n          exact\n          render={() => (\n            <Home msgAlert={this.msgAlert} setUser={this.setUser} />\n          )}\n        />\n        <AuthenticatedRoute\n          user={user}\n          path='/sign-out'\n          render={() => (\n            <SignOut\n              msgAlert={this.msgAlert}\n              clearUser={this.clearUser}\n              user={user}\n            />\n          )}\n        />\n        <AuthenticatedRoute\n          user={user}\n          path='/change-password'\n          render={() => (\n            <ChangePassword msgAlert={this.msgAlert} user={user} />\n          )}\n        />\n        <AuthenticatedRoute\n          user={user}\n          exact\n          path='/create-ticket'\n          render={() => (\n            <CreateTicket msgAlert={this.msgAlert} user={user} />\n          )}\n        />\n\n        <AuthenticatedRoute\n          user={user}\n          exact\n          path='/tickets'\n          render={() => (\n            <IndexTickets msgAlert={this.msgAlert} user={user} />\n          )}\n        />\n\n        <AuthenticatedRoute\n          user={user}\n          exact\n          path='/tickets/:id/update'\n          render={() => (\n            <UpdateTicket msgAlert={this.msgAlert} user={user} />\n          )}\n        />\n\n        <AuthenticatedRoute\n          user={user}\n          exact\n          path='/tickets/:id'\n          render={() => <ShowTicket msgAlert={this.msgAlert} user={user} />}\n        />\n      </main>\n    </Fragment>\n  )\n}\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}